class Managed
!!!311298.php!!!	getGet(in attribute : string) : string

			return 'get'.ucfirst($attribute);
!!!311426.php!!!	getSet(in attribute : ) : string

			return 'set'.ucfirst($attribute);
!!!311554.php!!!	getDisp(in attribute : string) : string

			return 'display'.ucfirst($attribute);
!!!311682.php!!!	setDisplay(in attribute : string) : string

			return htmlspecialchars((string)$this->$attribute);
!!!311810.php!!!	hydrate(in attributes : array) : void

			if (empty($attributes))
			{
				new \exception\Error($GLOBALS['lang']['class']['core']['managed']['no_attributes'], 'managed');
			}
			foreach ($attributes as $key => $value)
			{
				$method=$this->getSet($key);
				if (method_exists($this, $method))
				{
					$this->$method($value);
				}
			}
!!!311938.php!!!	Manager() : \core\Manager

			new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['manager'].' '.get_class($this), 'managed');
			$object=get_class($this).'Manager';
			return new $object(\core\DBFactory::MysqlConnection());
!!!312066.php!!!	get(in index : mixed) : void

			$this->hydrate($this->Manager()->get($index));
!!!312194.php!!!	identical(in object : \core\Managed) : bool

			foreach ($this::SIMILAR_CRITERION as $critere)
			{
				$accessor=$this->getGet($critere);
				if (!$this->$accessor()==$object->$accessor())
				{
					new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['not_identical'].' '.$critere, 'managed');
					return false;
				}
			}
			new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['is_identical'], 'managed');
			return true;
!!!312322.php!!!	table() : array

			$array=array();
			foreach ($this->Manager()::ATTRIBUTES as $attribute)
			{
				$accessor=$this->getGet($attribute);
				if (method_exists($this, $accessor))
				{
					if ($this->$accessor()!==null)
					{
						$array[$attribute]=$this->$accessor();
					}
				}
			}
			return $array;
!!!312450.php!!!	retrieve() : void

			new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['retrieve'].' '.get_class($this), 'managed');
			$getter=$this->getGet($this::INDEX);
			$this->get($this->$getter());
!!!312578.php!!!	create() : void

			new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['create'].' '.get_class($this), 'managed');
			$id=$this->Manager()->add($this->table());
			$method=$this->getSet($this::INDEX);
			if (method_exists($this, $method))
			{
				new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['create_set_id'], 'managed');
				$this->$method($id);
			}
!!!312706.php!!!	change() : void

			new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['change'].' '.get_class($this), 'managed');
			$getter=$this->getGet($this::INDEX);
			$this->Manager()->update($this->table(), $this->$getter());
!!!312834.php!!!	delete() : void

			new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['delete'].' '.get_class($this), 'managed');
			$getter=$this->getGet($this::INDEX);
			$this->Manager()->delete($this->$getter());
!!!312962.php!!!	clone() : core\Managed

			new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['clone'].' '.get_class($this), 'managed');
			$class=get_class($this);
			return new $class($this->table());
!!!313090.php!!!	__construct(in attributes : array = array()) : void

			$this->hydrate($attributes);
			new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['construct'].' '.get_class($this), 'managed');
!!!313218.php!!!	obj2arr(in rec : bool = False) : array

			new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['obj2arr'].' '.get_class($this), 'managed');
			$arr = get_object_vars($this);
			if ($rec)
			{
				return $this->obj2arrRec($arr);
			}
			return $arr;
!!!313346.php!!!	obj2arrRec(in arr : array) : array

			new \exception\Notice($GLOBALS['lang']['class']['core']['managed']['obj2arrrec'].' '.get_class($this), 'managed');
			foreach ($arr as $key => $val)
			{
				if (is_object($val))
				{
					if (method_exists($val, 'obj2arr'))
					{
						$arr[$key] = $val->obj2arr();
					}
					else
					{
						$arr[$key] = (array) $val;
					}
				}
				if (is_array($val))
				{
					$arr[$key] = $this->obj2arrRec($val);
				}
			}
			return $arr;
