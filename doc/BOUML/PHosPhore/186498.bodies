class Visitor
!!!373506.php!!!	getPage() : Page

				return $this->page;
!!!373634.php!!!	getConfigurations() : array

				return $this->configurations;
!!!373762.php!!!	setPage(in page : Page) : void

				$this->page=$page;
!!!373890.php!!!	setConfigurations(in configurations : array) : void

				$this->configurations=$configurations;
!!!374018.php!!!	displayPage() : string

				return htmlspecialchars((string)$this->page->display());
!!!374146.php!!!	displayConfigurations() : string

				$display='';
				foreach ($this->configurations as $Configuration)
				{
					$display.=$Configuration->display().'<br />';
				}
				return $display;
!!!374274.php!!!	setConfiguration(in index : string, in value : mixed) : void

			$this->configurations[$index]=$value;
!!!374402.php!!!	getConfiguration(in index : string) : mixed

			if (isset($this->configurations))
			{
				if (isset($this->configurations[$index]))
				{
					return $this->configurations[$index];
				}
				else
				{
					new \exception\Warning($GLOBALS['lang']['class']['user']['visitor']['error_configuration_undefined']);
				}
			}
			else
			{
				new \exception\Warning($GLOBALS['lang']['class']['user']['visitor']['error_configurations_undefined']);
			}
!!!374530.php!!!	verifPermission() : bool

			return $this->getRole()->existPermission(array('application' => $this->getPage()->getApplication(), 'action' => $this->getPage()->getAction()));
!!!374658.php!!!	connection(in password : string) : bool

			new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['connection'], 'visitor');
			if ($this->getPassword()->verif($password))
			{
				$utilisateurManager=$this->Manager();
				$date=date($GLOBALS['config']['db_date_format']);
				$utilisateurManager->update(array(
					'date_login' => $date,
				), $this->getId());
				$this->setDate_login($date);
				$_SESSION['password']=$this->getPassword()->getPassword_clear();
				$_SESSION['nickname']=$this->getNickname();
				$_SESSION['id']=$this->getId();
				new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['connection_end'], 'visitor');
				return True;
			}
			else
			{
				new \exception\Error($GLOBALS['lang']['class']['user']['visitor']['connection_error'], 'visitor');
				return False;
			}
!!!374786.php!!!	disconnection() : void

			new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['disconnection'], 'visitor');
			if ($this->getPassword()->verif($this->getPassword()->getPassword_clear()))
			{
				$utilisateurManager=$this->Manager();
				$date=date($GLOBALS['config']['db_date_format']);
				$utilisateurManager->update(array(
					'date_login' => $date,
				), $this->getId());
				unset($_SESSION['password']);
				unset($_SESSION['nickname']);
				unset($_SESSION['id']);
				new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['disconnection_end'], 'visitor');
			}
			else
			{
				new \exception\Error($GLOBALS['lang']['class']['user']['visitor']['disconnection_error'], 'visitor');
			}
!!!374914.php!!!	registration(in password : string, in role_name : string) : void

			new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['registration'], 'visitor');
			$VisitorManager=$this->Manager();
			$VisitorManager->add(array(
				'nickname'          => $this->getNickname(),
				'avatar'            => $this->getAvatar(),
				'date_registration' => $this->getDate_registration(),
				'date_login'        => $this->getDate_login(),
				'banned'            => (int)$this->getBanned(),
				'email'             => $this->getEmail(),
			));
			$this->setId($VisitorManager->getIdBy(array(
				'nickname'          => $this->getNickname(),
				'avatar'            => $this->getAvatar(),
				'date_registration' => $this->getDate_registration(),
				'date_login'        => $this->getDate_login(),
				'banned'            => (int)$this->getBanned(),
				'email'             => $this->getEmail(),
			)));
			$this->setPassword(new \user\Password(array(
				'id'             => $this->getId(),
				'password_clear' => $password,
			)));
			$this->setRole(new \user\Role(array(
				'id'        => $this->getId(),
				'role_name' => $role_name,
			)));
			$this->getRole()->retrievePermissions();
			$RoleManager=$this->getRole()->Manager();
			$RoleManager->update(array(
				'role_name' => $this->getRole()->getRole_name(),
			), $this->getId());
			$PasswordManager=$this->getPassword()->Manager();
			$this->getPassword()->hash();
			$PasswordManager->update(array(
				'password_hashed' => $this->getPassword()->getPassword_hashed(),
			), $this->getId());
			new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['registration_end'], 'visitor');
!!!375042.php!!!	update() : void

			new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['update'], 'visitor');
			$Manager=$this->Manager();
			$Manager->update(array(
				'avatar' => $this->getAvatar(),
				'banned' => (int)$this->getBanned(),
				'email'  => $this->getEmail(),
			), $this->getId());
			new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['updated'], 'visitor');
!!!375170.php!!!	delete() : void

			new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['delete'], 'visitor');
			$Manager=$this->Manager();
			$Manager->delete($this->getId());
			new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['deleted'], 'visitor');
!!!375298.php!!!	loadPage(in parameters : array) : string

			new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['loadpage'], 'visitor');
			global $Visitor, $Router;
			$this->setConfigurations($GLOBALS['config']['user_config']);
			$ConfigurationManager=new \user\ConfigurationManager(\core\DBFactory::MysqlConnection());
			if (isset($parameters[$GLOBALS['config']['route_parameter']]['lang']))
			{
				if (in_array($parameters[$GLOBALS['config']['route_parameter']]['lang'],array_keys($GLOBALS['config']['lang_available'])))
				{
					new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['recognized_lang'].' '.$parameters[$GLOBALS['config']['route_parameter']]['lang'], 'visitor');
					if ($this->getId()==$GLOBALS['config']['guest_id'])
					{
						new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['lang_guest'], 'visitor');
						$_SESSION['lang']=$parameters[$GLOBALS['config']['route_parameter']]['lang'];
					}
					else
					{
						new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['lang_register'], 'visitor');
						if ($ConfigurationManager->existBy(array(
							'id_user' => $this->getId(),
							'name'    => 'lang',
						)))
						{
							new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['already_exist'], 'visitor');
							$id=$ConfigurationManager->getIdBy(array(
								'id_user' => $this->getId(),
								'name'    => 'lang',
							));
							$ConfigurationManager->update(array(
								'value' => $parameters[$GLOBALS['config']['route_parameter']]['lang'],
							), $id);
						}
						else
						{
							new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['add'], 'visitor');
							$ConfigurationManager->add(array(
								'id_user' => $this->getId(),
								'name'    => 'lang',
								'value'   => $parameters[$GLOBALS['config']['route_parameter']]['lang'],
							));
						}
					}
				}
			}
			if ($this->getId()==$GLOBALS['config']['guest_id'])
			{
				foreach (array_keys($this->getConfigurations()) as $configuration_name)
				{
					if (isset($_SESSION[$configuration_name]))
					{
						$this->setConfiguration($configuration_name, $_SESSION[$configuration_name]);
					}
				}
			}
			else
			{
				$configurations=$ConfigurationManager->getBy(array(
					'id_user' => $this->getId(),
				), array(
					'id_user' => '=',
				));
				foreach ($configurations as $configuration)
				{
					$Configuration=new \user\Configuration($configuration);
					$this->setConfiguration($Configuration->getName(), $Configuration->getValue());
				}
			}
			if($this->getRole()->existPermission($parameters))	// Permission accordÃ©e
			{
				$this->setPage(new \user\Page($parameters));
				if (stream_resolve_include_path($this->getPage()->getPath()))
				{
					include($this->getPage()->getPath());
					new \exception\Notice($GLOBALS['lang']['class']['user']['visitor']['loadpage_end'], 'visitor');
					return $this->getPage()->display();
				}
				else
				{
					new \exception\FatalError($GLOBALS['lang']['class']['user']['visitor']['no_file']);
				}
			}
			else
			{
				new \exception\FatalError($GLOBALS['lang']['class']['user']['visitor']['no_perm']);
			}
!!!375426.php!!!	verifLinks(in links : array) : bool

			foreach ($links as $index => $link)
			{
				if ($this->getRole()->existPermission($link))
				{
					return True;
				}
			}
			return False;
!!!375554.php!!!	__construct(in attributes : array) : mixed

			parent::__construct($attributes);
			$this->retrieve();
