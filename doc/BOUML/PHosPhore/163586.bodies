class Notification
!!!281986.php!!!	getId() : int

				return $this->id;
!!!282114.php!!!	getType() : string

				return $this->type;
!!!282242.php!!!	getDate_release() : string

				return $this->date_release;
!!!282370.php!!!	getId_content() : int

				return $this->id_content;
!!!282498.php!!!	getContent() : string

				return $this->content;
!!!282626.php!!!	setId(in id : int) : void

				$this->id=(int)$id;
!!!282754.php!!!	setType(in type : string) : void

				$this->type=(string)$type;
!!!282882.php!!!	setDate_release(in date_release : string) : void

				$this->date_release=(string)$date_release;
!!!283010.php!!!	setId_content(in id_content : int) : void

				$this->id_content=(int)$id_content;
!!!283138.php!!!	setContent(in content : string) : void

				$this->content=(string)$content;
!!!283266.php!!!	displayId() : string

				return htmlspecialchars((string)$this->id);
!!!283394.php!!!	displayType() : string

				return htmlspecialchars((string)$this->type);
!!!283522.php!!!	displayDate_release() : string

				return htmlspecialchars((string)$this->date_release);
!!!283650.php!!!	displayId_content() : int

				return htmlspecialchars((string)$this->id_content);
!!!283778.php!!!	displayContent() : string

			global $Visitor;
			if ($this->getId_content()===null)		// From session
			{
				return $this->getContent();
			}
			$Content=new \content\Content(array(
				'id_content' => $this->getId_content(),
			));
			$Content->retrieveLang($Visitor->getConfiguration('lang'));
			return $Content->display();
!!!283906.php!!!	display() : string

			return $this->displayContent();
!!!284034.php!!!	retrieveContents() : array

			$ContentManager=new \content\ContentManager(\core\DBFactory::MysqlConnection());
			return $ContentManager->retrieveBy(array(
				'id_content' => $this->getId_content(),
			), array(
				'id_content' => '=',
			));
!!!284162.php!!!	sendNotification(in PageElement : , in Notification : \content\pageelement\Notification) : void

			global $Visitor;
			$Notification=clone $Notification;
			if (method_exists($Notification, 'setHead'))
			{
				$Notification->setHead($PageElement);
			}
			$Notification->addElement('type', $this->displayType());
			$Notification->addElement('content', $this->displayContent());
			if (!$PageElement->getElement('notifications'))
			{
				$PageElement->addElement('notifications', array());
			}
			$PageElement->addValueElement('notifications', $Notification);
			if ($this->getId_content()!==null)
			{
				$LinkNotificationUser=new \user\LinkNotificationUser(\core\DBFactory::MysqlConnection());
				$LinkNotificationUser->deleteBy(array(
					'id_notification' => $this->getId(),
					'id_user'         => $Visitor->getId(),
				), array(
					'id_notification' => '=',
					'id_user'         => '=',
				));
			}
!!!284290.php!!!	create(in id_users : array = array()) : void

			$Manager=$this->Manager();
			$Manager->add(array(
				'type'         => $this->getType(),
				'date_release' => date($GLOBALS['config']['db_date_format']),
				'id_content'   => $this->getId_content(),
			));
			$this->setId($Manager->getIdBy(array(
				'type'       => $this->getType(),
				'id_content' => $this->getId_content(),
			)));
			$LinkNotificationUser=new \user\LinkNotificationUser(\core\DBFactory::MysqlConnection());
			$id_user=array();
			foreach ($id_users as $id)
			{
				$id_user[]=array('id_user' => $id);
			}
			$LinkNotificationUser->addBy($id_user, array(
				'id_notification' => $this->getId(),
			));
!!!284418.php!!!	change() : void

			$Manager=$this->Manager();
			$Manager->update(array(
				'type'         => $this->getType(),
				'date_release' => date($GLOBALS['config']['db_date_format']),
			), $this->getId());
			$LinkNotificationUser=new \user\LinkNotificationUser(\core\DBFactory::MysqlConnection());
			$id_users=array();
			foreach ($this->retrieveUsers() as $User)
			{
				$id_users[]=$this->getId();
			}
			$donnees_already_in=$LinkNotificationUser->get('id_notification', $this->getId());
			$id_users_already_in=array();
			foreach ($donnees_already_in as $donnee)
			{
				$id_users_already_in[]=$donnee['id_user'];
			}
			$id_users_not_changed=array_intersect($id_users_already_in, $id_users);
			if(array_diff($id_users_not_changed, $id_users_already_in))
			{
				$LinkNotificationUser->deleteBy(array(
					'id_notification' => $this->getId(),
				), array(
					'id_notification' => '=',
				));
				$LinkNotificationUser->addBy(array(array(
					'id_user' => $id_users,
				)), array(
					'id_notification' => $this->getId(),
				));
			}
			else
			{
				$id_users_to_add=array_diff($id_users, $id_users_not_changed);
				$LinkNotificationUser->addBy(array(array(
					'id_user' => $id_users_to_add,
				)), array(
					'id_notification' => $this->getId(),
				));
			}
!!!284546.php!!!	delete() : void

			$Manager=$this->Manager();
			$this->retrieve();
			$Manager->delete($this->getId());
			$LinkNotificationUser=new \user\LinkNotificationUser(\core\DBFactory::MysqlConnection());
			$LinkNotificationUser->deleteBy(array(
				'id_notification' => $this->getId(),
			), array(
				'id_notification' => '=',
			));
			$ContentManager=new \content\ContentManager(\core\DBFactory::MysqlConnection());
			$ContentManager->deleteBy(array(
				'id_content' => $this->getId_content(),
			), array(
				'id_content' => '=',
			));
!!!284674.php!!!	retrieveUsers() : array

			$Link=new \user\LinkNotificationUser(\core\DBFactory::MysqlConnection());
			return $Link->retrieveBy(array(
				'id_notification' => $this->getId(),
			), array(
				'id_notification' => '=',
			), '\\user\\User', array(
				'db'  => 'id_user',
				'obj' => 'id',
			), 1);
