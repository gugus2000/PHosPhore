class Password
!!!402178.php!!!	getId() : int

				return $this->id;
!!!402306.php!!!	getPassword_clear() : string

				return $this->password_clear;
!!!402434.php!!!	getPassword_hashed() : string

				return $this->password_hashed;
!!!402562.php!!!	setId(in id : int) : void

				$this->id=(int)$id;
!!!402690.php!!!	setPassword_clear(in password_clear : string) : void

				$this->password_clear=(string)$password_clear;
!!!402818.php!!!	setPassword_hashed(in password_hashed : string) : void

				$this->password_hashed=(string)$password_hashed;
!!!402946.php!!!	displayId() : string

				return htmlspecialchars((string)$this->id);
!!!403074.php!!!	displayPassword_clear() : string

				return htmlspecialchars((string)$this->password_clear);
!!!403202.php!!!	displayPassword_hashed() : string

				return htmlspecialchars((string)$this->password_hashed);
!!!403330.php!!!	display() : string

			return $this->displayPassword_hashed();
!!!403458.php!!!	verif(in password : string) : bool

			new \exception\Notice($GLOBALS['lang']['class']['user']['password']['verif'], 'password');
			if ($this->getPassword_hashed())
			{
				$hash=$this->getPassword_hashed();
				$options=array(
					'cost' => $GLOBALS['config']['hash_cost'],
				);
				if (password_verify($password, $hash))
				{
					new \exception\Notice($GLOBALS['lang']['class']['user']['password']['password_match'], 'password');
				    if (password_needs_rehash($hash, PASSWORD_DEFAULT, $options))
				    {
				    	new \exception\Warning($GLOBALS['lang']['class']['user']['password']['need_rehash'], 'password');
				        $this->setPassword_hashed(password_hash($password, PASSWORD_DEFAULT, $options));
				        $PasswordManager=$this->Manager();
				        $PasswordManager->update(array(
				        	'password_hashed' => $this->getPassword_hashed(),
				        ), $this->getId());
				        new \exception\Notice($GLOBALS['lang']['class']['user']['password']['rehashed'], 'password');
				    }
				    $this->setPassword_clear($password);
				    return True;
				}
				else
				{
					new \exception\Warning($GLOBALS['lang']['class']['user']['password']['password_mismatch'], 'password');
				}
				return False;
			}
			else
			{
				new \exception\Error($GLOBALS['lang']['class']['user']['password']['no_hashed_password'], 'password');
			}
			return False;
!!!403586.php!!!	hash() : void

			$options=array(
				'cost' => $GLOBALS['config']['hash_cost'],
			);
			$this->setPassword_hashed(password_hash($this->getPassword_clear(), PASSWORD_DEFAULT, $options));
